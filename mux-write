#!/usr/bin/env bash

set -euo pipefail

if [ -z "${TMUX:-}" ]; then
  session=blog
  if [ "${1:-}" != "" ]; then
    session="${1:-}"
    shift
  fi

  if tmux has-session -t "$session" &> /dev/null; then
    >&2 echo "A tmux session for $session already exists."
    exit 1
  fi

  tmux new -d -s "$session"
  cmd="mux-write nested"
  if [ "${1:-}" != "" ]; then
    cmd="$cmd $1"
  fi
  tmux send-keys -t "$session" "$cmd" Enter
  tmux attach -t "$session"
  exit
elif [ "${1:-}" != nested ]; then
  >&2 echo "Inside tmux, first argument must be nested, to confirm you know how this script works."
  exit 1
else
  shift
fi

tmux new-window
sleep 0.3

if [ "${1:-}" != "" ]; then
  blog="$1"
else
  # Must not have spaces!
  blog_dirs=(
    "$HOME/prog/io/jez/blog"
    "$HOME/stripe/github/blog"
    "$HOME/blog"
  )

  for blog in "${blog_dirs[@]}"; do
    if [ -d "$blog" ]; then
      # blog will be in scope even after this loop finishes
      break
    fi
  done
fi

tmux send-keys "cd $blog" Enter
tmux send-keys "_bin/serve" Enter
tmux select-window -t 1

tmux send-keys "cd $blog" Enter

for i in "" -{1..20}; do
  slug="untitled$i"
  filename="_drafts/$slug.md"
  if [ ! -f "$filename" ]; then
    break
  fi
done

if [ -f "$filename" ]; then
  >&2 echo "Over 20 drafts, aborting!"
  exit 1
fi

tmux send-keys "bex octopress new draft $slug" Enter
tmux send-keys "vim $filename" Enter
# So we don't create a ton of untitled files.
# If the user wants to save, they can :w
tmux send-keys ":Remove" Enter
tmux send-keys "u wGa"
